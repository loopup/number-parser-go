trigger: 
  branches:
    include:
      - master
  paths:
    exclude:
      - README.md
pool:
   vmImage: 'ubuntu-latest'

steps: 
- task: GoTool@0
  inputs:
    version: '1.23.3'
- task: Go@0
  inputs:
    command: 'get'
    arguments: '-d'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
- task: Go@0
  inputs:
    command: 'build'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
- task: Bash@3
  displayName: 'Install Go Test and Report Tools'
  inputs:
    targetType: inline
    script: |
      go get code.google.com/p/go.tools/cmd/cover
      go get github.com/t-yuki/gocover-cobertura
      go get -u github.com/jstemmer/go-junit-report

- task: Bash@3
  displayName: Tests
  inputs:
    targetType: inline
    script: |
      go test -v -coverprofile=coverage.txt -covermode count ./... 2>&1 | $(go env GOPATH)/bin/go-junit-report > report.xml

- task: Go@0
  displayName: Fuzz 
  inputs:
    command: 'test'
    arguments: '-v -fuzz=Fuzz -fuzztime 2m'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
- task: PublishTestResults@2
  inputs:
    testResultsFormat: JUnit
    testResultsFiles: "./report.xml"   
    failTaskOnFailedTests: true
    testRunTitle: "Go Tests"
- task: PublishCodeCoverageResults@2
  inputs:
   summaryFileLocation: "coverage.xml"
   pathToSources: "$(System.DefaultWorkingDirectory)"
- task: CopyFiles@2
  inputs:
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
- task: PublishBuildArtifacts@1
  inputs:
     artifactName: drop

     